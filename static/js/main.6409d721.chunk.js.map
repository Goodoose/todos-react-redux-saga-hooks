{"version":3,"sources":["images/checked.svg","images/unchecked.svg","images/close.svg","store/actions/index.tsx","store/types.tsx","components/Todo/index.tsx","components/Todo/Todo.tsx","components/Todos/index.tsx","components/Todos/Todos.tsx","App.tsx","store/reducers/index.tsx","store/sagas/sagaFetch.tsx","store/sagas/sagaAdd.tsx","store/sagas/sagaDelete.tsx","store/sagas/sagaEditChecked.tsx","store/sagas/index.tsx","store/index.tsx","index.tsx"],"names":["module","exports","deleteTodo","id","type","TodoItem","props","dispatch","useDispatch","key","todo","className","href","onClick","checked","alt","src","unchecked","title","close","Todos","useState","value","setValue","useEffect","todosState","useSelector","state","todoReducer","todos","setTodos","todosFiltered","setTodosFiltered","handleAddTodo","addTodo","name","placeholder","onKeyDown","event","preventDefault","onChange","target","map","Todo","length","filter","forEach","App","initialState","fetchTodosAsync","fetchTodosSaga","fetchData","a","fetch","method","headers","response","json","data","Object","keys","payload","put","takeEvery","addTodoAsync","addTodoSaga","body","JSON","stringify","action","deleteTodoAsync","deleteTodoSaga","editCheckedSaga","editChecked","rootSaga","all","sagaMiddleware","createSagaMiddleware","rootReducers","combineReducers","createStore","applyMiddleware","run","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6409d721.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checked.6ef2b847.svg\";","module.exports = __webpack_public_path__ + \"static/media/unchecked.40e0f797.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.8e6a0a40.svg\";","import { FETCH_TODOS, ADD_TODO, DELETE_TODO, EDIT_CHECKED } from '../types';\r\n\r\nexport const fetchTodos = () => ({type: FETCH_TODOS});\r\n\r\nexport const addTodo = (title: string) => ({type: ADD_TODO, title});\r\n\r\nexport const deleteTodo = (id: string) => ({type: DELETE_TODO, id});\r\n\r\nexport const editChecked = (id: string, checked: boolean) => ({type: EDIT_CHECKED, id, checked});\r\n","export const FETCH_TODOS_ASYNC = 'FETCH_TODOS_ASYNC';\r\nexport const FETCH_TODOS = 'FETCH_TODOS';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const ADD_TODO_ASYNC = 'ADD_TODO_ASYNC';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETE_TODO_ASYNC = 'DELETE_TODO_ASYNC';\r\nexport const EDIT_CHECKED = 'EDIT_CHECKED';\r\nexport const EDIT_CHECKED_ASYNC = 'EDIT_CHECKED_ASYNC';\r\n\r\nexport interface Todo {\r\n  id: string;\r\n  title: string;\r\n  checked: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  todos: Todo[]\r\n}\r\n\r\ninterface fetchTodosAsync {\r\n  type: typeof FETCH_TODOS_ASYNC;\r\n  payload: Todo[];\r\n}\r\n\r\ninterface addTodo {\r\n  type: typeof ADD_TODO_ASYNC;\r\n  payload: Todo;\r\n}\r\n\r\ninterface deleteTodo {\r\n  type: typeof DELETE_TODO_ASYNC;\r\n  payload: Todo;\r\n}\r\n\r\ninterface editChecked {\r\n  type: typeof EDIT_CHECKED_ASYNC;\r\n  payload: Todo;\r\n\r\n}\r\n\r\nexport type TodosTypes = fetchTodosAsync | addTodo | deleteTodo | editChecked;\r\n","import { TodoItem } from './Todo';\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport './todo.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteTodo, editChecked} from '../../store/actions';\r\nimport checked from \"../../images/checked.svg\"\r\nimport unchecked from \"../../images/unchecked.svg\"\r\nimport close from \"../../images/close.svg\"\r\n\r\ninterface TodoItemProps{\r\n  todo: {\r\n    id: string,\r\n    title: string,\r\n    checked: boolean\r\n  }\r\n}\r\n\r\nexport const TodoItem: React.FC<TodoItemProps> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerDelete = () => dispatch(deleteTodo(props.todo.id));\r\n\r\n  const handlerChangeImage = () => dispatch(editChecked(props.todo.id, !props.todo.checked));\r\n\r\n  return(\r\n    <li key={props.todo.id} className=\"container__item\">\r\n      <hr className=\"container__line\" />\r\n      <div className=\"container__content\">\r\n        <a href=\"#\" onClick={handlerChangeImage}>\r\n          <img\r\n            alt=\"checked\"\r\n            className=\"container__image--checked\"\r\n            src={props.todo.checked ? unchecked : checked}\r\n          />\r\n        </a>\r\n        <div className=\"container__input--item\">\r\n          {props.todo.title}\r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          className=\"container__image--hide\"\r\n          onClick={handlerDelete}\r\n        >\r\n          <img\r\n            alt=\"close\"\r\n            className=\"container__image--close\"\r\n            src={close}\r\n          />\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import { Todos } from './Todos';\r\n\r\nexport default Todos;\r\n","import React, {useEffect, useState } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './todos.css';\r\nimport TodoItem from '../Todo';\r\nimport {addTodo, deleteTodo, fetchTodos} from '../../store/actions';\r\n\r\ninterface Todo {\r\n  id: string,\r\n  title: string,\r\n  checked: boolean\r\n}\r\n\r\ninterface StateProps{\r\n  todoReducer: {\r\n    todos: Todo[]\r\n  }\r\n}\r\n\r\nexport const Todos: React.FC = () => {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect( () => {\r\n    dispatch(fetchTodos())\r\n  },[dispatch]);\r\n\r\n  const todosState = useSelector<StateProps, Todo[]>(state => state.todoReducer.todos);\r\n\r\n  const [ todos, setTodos ] = useState<Todo[]>(todosState);\r\n  const [ todosFiltered, setTodosFiltered ] = useState<Todo[]>([]);\r\n\r\n  useEffect( () => {\r\n      setTodos(todosState);\r\n    }\r\n  );\r\n\r\n  useEffect( () => {\r\n      setTodosFiltered(todosState);\r\n    }, [todosState]\r\n  );\r\n\r\n  const handleAddTodo = (title: string) => {\r\n    if (title === 'ENTER') {\r\n      dispatch(addTodo(value));\r\n      setValue('');\r\n    } else {\r\n      setValue(title);\r\n    }\r\n  };\r\n\r\n  const buttonAll = () =>  {\r\n    setTodosFiltered(todos);\r\n  };\r\n\r\n  const buttonActive = () =>  {\r\n    setTodosFiltered(todos.filter(todo => todo.checked === false));\r\n  };\r\n\r\n  const buttonCompleted = () => {\r\n    setTodosFiltered(todos.filter(todo => todo.checked === true));\r\n  };\r\n\r\n  const buttonClearCompleted = () =>  {\r\n    todos.forEach(todo => {\r\n      if(todo.checked){\r\n        dispatch(deleteTodo(todo.id));\r\n      }\r\n    })\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"container\">\r\n        <input\r\n          className=\"container__input\"\r\n          type='text'\r\n          value={value}\r\n          name='inputValue'\r\n          placeholder=\"What needs to be done?\"\r\n          onKeyDown={event => event.key === 'Enter'\r\n            && handleAddTodo('ENTER')\r\n            && event.preventDefault()}\r\n          onChange={event => handleAddTodo(event.target.value)}\r\n        />\r\n        <ul className=\"container_list\">\r\n          {\r\n            todosFiltered.map(todo => (\r\n              <div key={todo.id}>\r\n                <TodoItem todo={todo}/>\r\n              </div>\r\n            ))\r\n          }\r\n        </ul>\r\n\r\n        <hr className=\"container__line\" />\r\n        <div className=\"container__footer\">\r\n          <div className=\"container__counter\">\r\n            {todosFiltered.length}\r\n            {' '}\r\n            {todosFiltered.length === 1 ? 'item left' : 'items left'}\r\n          </div>\r\n\r\n          <div className=\"container__buttons--list\">\r\n            <button\r\n              type=\"button\"\r\n              name=\"All\"\r\n              className=\"container__button\"\r\n              onClick={buttonAll}\r\n            >\r\n              All\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"container__button\"\r\n              onClick={buttonActive}\r\n            >\r\n              Active\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"container__button\"\r\n              onClick={buttonCompleted}\r\n            >\r\n              Completed\r\n            </button>\r\n          </div>\r\n          <div className=\"container__button--completed\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"container__button\"\r\n              onClick={buttonClearCompleted}\r\n            >\r\n              Clear completed\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Todos from './components/Todos';\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">TODOS</header>\n      <Todos />\n    </div>\n  );\n};\n\nexport default App;\n","import {\r\n  ADD_TODO_ASYNC,\r\n  FETCH_TODOS_ASYNC,\r\n  DELETE_TODO_ASYNC,\r\n  EDIT_CHECKED_ASYNC,\r\n  TodoState,\r\n  TodosTypes\r\n} from '../types';\r\n\r\nexport const initialState: TodoState = {\r\n  todos: []\r\n};\r\n\r\nexport function todoReducer(\r\n  state = initialState,\r\n  action: TodosTypes\r\n): TodoState {\r\n  switch(action.type){\r\n    case FETCH_TODOS_ASYNC:\r\n      return {\r\n        ...state.todos, todos: action.payload\r\n      };\r\n    case ADD_TODO_ASYNC:\r\n      return {\r\n        ...state.todos, todos: [ ...state.todos, action.payload ]\r\n      };\r\n    case DELETE_TODO_ASYNC:\r\n      return {\r\n        ...state.todos, todos: [ ...state.todos.filter(todo => todo.id !== action.payload.id) ]\r\n      };\r\n    case EDIT_CHECKED_ASYNC:\r\n      return {\r\n        ...state.todos, todos: [\r\n          ...state.todos.map(todo => {\r\n            if(todo.id === action.payload.id){\r\n              todo.checked = action.payload.checked\r\n            }\r\n            return todo;\r\n          })\r\n        ]\r\n      };\r\n    default: return state;\r\n  }\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { FETCH_TODOS, FETCH_TODOS_ASYNC } from '../types';\r\n\r\nconst fetchData = async () => {\r\n  const response = await fetch('https://rn-todo-new.firebaseio.com/todos.json', {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'}\r\n  });\r\n  const data = await response.json();\r\n  return Object.keys(data).map(key => ({...data[key], id: key}));\r\n};\r\n\r\nexport function* fetchTodosAsync() {\r\n  const payload = yield fetchData();\r\n  yield put({ type: FETCH_TODOS_ASYNC, payload });\r\n}\r\n\r\nexport function* fetchTodosSaga() {\r\n  yield takeEvery(FETCH_TODOS, fetchTodosAsync)\r\n}\r\n","import { takeEvery, put } from 'redux-saga/effects';\r\nimport { ADD_TODO, ADD_TODO_ASYNC } from '../types';\r\n\r\ninterface Data {\r\n  name: string\r\n}\r\n\r\nconst addTodo = async (title: string) => {\r\n  const response = await fetch('https://rn-todo-new.firebaseio.com/todos.json', {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({title, checked: false}),\r\n  });\r\n  const data: Data = await response.json();\r\n  return data.name;\r\n};\r\n\r\ninterface ActionAdd {\r\n  type: string,\r\n  title: string,\r\n  checked: boolean,\r\n}\r\n\r\nexport function* addTodoAsync(action: ActionAdd) {\r\n  const id = yield addTodo(action.title);\r\n  const title = action.title;\r\n  yield put({ type: ADD_TODO_ASYNC, payload: ({ id, title, checked: false }) })\r\n}\r\n\r\nexport function* addTodoSaga() {\r\n  yield takeEvery(ADD_TODO, addTodoAsync);\r\n}\r\n","import { takeEvery, put } from 'redux-saga/effects';\r\nimport {DELETE_TODO, DELETE_TODO_ASYNC} from '../types';\r\n\r\nconst deleteTodo = async (id: string) => {\r\n  await fetch(`https://rn-todo-new.firebaseio.com/todos/${id}.json`, {\r\n    method: 'DELETE',\r\n    headers: {'Content-Type': 'application/json'},\r\n  });\r\n};\r\n\r\ninterface ActionDelete {\r\n  type: string,\r\n  id: string\r\n}\r\n\r\nexport function* deleteTodoAsync(action: ActionDelete){\r\n  yield deleteTodo(action.id);\r\n  const id = action.id;\r\n  yield put({ type: DELETE_TODO_ASYNC, payload: ({id}) })\r\n}\r\n\r\nexport function* deleteTodoSaga() {\r\n  yield takeEvery(DELETE_TODO, deleteTodoAsync);\r\n\r\n}\r\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { EDIT_CHECKED_ASYNC, EDIT_CHECKED } from '../types';\n\nconst editChecked = async (id: string, checked: boolean) => {\n  await fetch(`https://rn-todo-new.firebaseio.com/todos/${id}.json`, {\n    method: 'PATCH',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({checked}),\n  });\n};\n\ninterface ActionAdd {\n  type: string,\n  id: string,\n  checked: boolean\n}\n\nexport function* addTodoAsync(action: ActionAdd) {\n  yield editChecked(action.id, action.checked);\n  const id = action.id;\n  const checked = action.checked;\n  yield put({ type: EDIT_CHECKED_ASYNC, payload: ({ id, checked }) })\n}\n\nexport function* editCheckedSaga() {\n  yield takeEvery(EDIT_CHECKED, addTodoAsync);\n}\n","import { all } from 'redux-saga/effects';\r\nimport { fetchTodosSaga } from './sagaFetch';\r\nimport { addTodoSaga } from './sagaAdd';\r\nimport { deleteTodoSaga } from './sagaDelete';\r\nimport { editCheckedSaga } from \"./sagaEditChecked\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fetchTodosSaga(),\r\n    addTodoSaga(),\r\n    deleteTodoSaga(),\r\n    editCheckedSaga()\r\n  ])\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { todoReducer } from './reducers';\r\nimport rootSaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst rootReducers = combineReducers({\r\n  todoReducer,\r\n});\r\n\r\nexport default createStore(\r\n  rootReducers,\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}